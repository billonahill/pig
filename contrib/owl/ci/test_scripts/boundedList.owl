--cleanup environment
drop owltable testtable1 within owldatabase tcat1;
drop owltable testtable2 within owldatabase tcat1;
drop owltable testtable3 within owldatabase tcat1;
drop owltable testtable4 within owldatabase tcat1;
drop owltable testtable5 within owldatabase tcat1;
drop owltable testtable6 within owldatabase tcat1;
drop owltable testtable7 within owldatabase tcat1;
drop owltable testtable8 within owldatabase tcat1;

drop owldatabase tcat1;

--Initialize environment
create owldatabase tcat1 identified by
 storage directory "http://namenode:8080/data/tcat1dir";  


select owldatabase objects where owldatabase in (tcat1);

create owltable type basic testtable1
within owldatabase tcat1
define Property key prk1 : INTEGER
schema "test1:int";

--Table with three bounded lists, two string types and one integer

create owltable type basic testtable2
within owldatabase tcat1
define property key prk1 : INTEGER
partitioned by LIST ("us", "uk")
with partition key country : STRING
define property key continent : STRING 
partitioned by LIST ("CA" , "AZ")
with partition key state : STRING
partitioned by LIST (94000 , 94001)
with partition key zip : INTEGER
schema "country:string,state:string,zip:int";


create owltable type basic testtable3
within owldatabase tcat1
partitioned by LIST ("us")
with partition key country : STRING
schema "country:string";

--unbounded list
create owltable type basic testtable4
within owldatabase tcat1
partitioned by LIST
with partition key country : STRING
schema "country:string";

--NEGATIVE create owltable tests

create owltable type basic testtable5
within owldatabase tcat1
partitioned by LIST ("us", 1)
with partition key country : STRING
schema "country:string";

create owltable type basic testtable6
within owldatabase tcat1
partitioned by LIST (1, 2)
with partition key country : STRING
schema "country:string";

create owltable type basic testtable7
within owldatabase tcat1
partitioned by LIST ()
with partition key country : STRING
schema "country:string";

select owltable objects where owldatabase in (tcat1);

--publish tests

publish dataelement to owltable testtable1 within owldatabase tcat1
 schema "c1:int"
 delocation "testloc1nopart";

select partition objects from owltable testtable1 within owldatabase tcat1;

publish dataelement to owltable testtable2 within owldatabase tcat1
 partition (country = "us" , state = "CA" , zip = 94000)
 property (prk1 = 1)
 schema "c1:int"
 delocation "testloc1";

publish dataelement to owltable testtable2 within owldatabase tcat1
 partition (country = "us" , state = "AZ" , zip = 94001)
 property (prk1 = 1)
 schema "c1:int"
 delocation "testloc4";

publish dataelement to owltable testtable3 within owldatabase tcat1
 partition (country = "us")
 schema "c1:int"
 delocation "testloc5";


--NEGATIVE publish tests 

publish dataelement to owltable testtable1 within owldatabase tcat1
 schema "c1:int"
 delocation "testloc1nopart";

publish dataelement to owltable testtable2 within owldatabase tcat1
 partition (country = "us" , state = "YY" , zip = 94000)
 property (prk1 = 1)
 schema "c1:int"
 delocation "testloc2";

publish dataelement to owltable testtable2 within owldatabase tcat1
 partition (country = "us" , state = "AZ" , zip = 1)
 property (prk1 = 1)
 schema "c1:int"
 delocation "testloc3";

-- select dataelements to check for valid inserts
select dataelement objects from owltable testtable2 within owldatabase tcat1 with partition ( country = "us" );
select dataelement objects from owltable testtable3 within owldatabase tcat1 with partition ( country = "us" );


--test for schema having partition keys

create owltable type basic testtable5 within owldatabase tcat1 partitioned by LIST with partition key zip : INTEGER schema "zip:int";
publish dataelement to owltable testtable5 within owldatabase tcat1 partition (zip = 94008) schema "zip:int" delocation "testloc22";
publish dataelement to owltable testtable5 within owldatabase tcat1 partition (zip = 94009) schema "c1:int,zip:int,c2:string" delocation "testloc23";

--test that partition key gets added in proper order
create owltable type basic testtable7 within owldatabase tcat1 partitioned by LIST with partition key abc1 : INTEGER partitioned by LIST with partition key abc2 : STRING schema "c1:int";
describe owltable testtable7 within owldatabase tcat1;

create owltable type basic testtable8 within owldatabase tcat1 partitioned by INTERVAL ("2009-10-09 18:00:00 PDT", 15 Minutes)
with partition key datest partitioned by LIST with partition key abc2 : STRING schema "c1:int";
describe owltable testtable8 within owldatabase tcat1;

--Negative tests for schema with invalid partition keys
publish dataelement to owltable testtable5 within owldatabase tcat1 partition (country = "us" , state = "YY" , zip = 94008) schema "zip:string" delocation "testloc2";
publish dataelement to owltable testtable5 within owldatabase tcat1 partition (country = "us" , state = "YY" , zip = 94008) schema "zip:long" delocation "testloc2";

create owltable type basic testtable6 within owldatabase tcat1 partitioned by LIST with partition key zip : INTEGER;
create owltable type basic testtable6 within owldatabase tcat1 partitioned by LIST with partition key zip : INTEGER schema "zip:string";
create owltable type basic testtable6 within owldatabase tcat1 partitioned by LIST with partition key zip : INTEGER schema "zip:long";


--cleanup environment
drop owltable testtable1 within owldatabase tcat1;
drop owltable testtable2 within owldatabase tcat1;
drop owltable testtable3 within owldatabase tcat1;
drop owltable testtable4 within owldatabase tcat1;
drop owltable testtable5 within owldatabase tcat1;
--testtable6 is negative test
drop owltable testtable7 within owldatabase tcat1;
drop owltable testtable8 within owldatabase tcat1;

drop owldatabase tcat1;
