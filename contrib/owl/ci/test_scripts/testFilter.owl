--cleanup environment
drop owltable testfilter within owldatabase testfilterdb;
drop owldatabase testfilterdb;

--Initialize environment
create owldatabase testfilterdb identified by
 storage directory "http://namenode:8080/data/testfilterdb"; 


create owltable type basic testfilter within owldatabase testfilterdb
partitioned by LIST with partition key part1 : INTEGER
partitioned by LIST with partition key part2 : STRING
partitioned by LIST with partition key part3 : INTEGER
schema "test1:int";


publish dataelement to owltable testfilter within owldatabase testfilterdb
 partition (part1 = 1, part2 = "aaa", part3 = 3)
 schema "c1:int" delocation "testloc1";

publish dataelement to owltable testfilter within owldatabase testfilterdb
 partition (part1 = 1, part2 = "bbb", part3 = 3)
 schema "c1:int" delocation "testloc2";

publish dataelement to owltable testfilter within owldatabase testfilterdb
 partition (part1 = 1, part2 = "bbb", part3 = 4)
 schema "c1:int" delocation "testloc3";

publish dataelement to owltable testfilter within owldatabase testfilterdb
 partition (part1 = 2, part2 = "aaa", part3 = 5)
 schema "c1:int" delocation "testloc4";

publish dataelement to owltable testfilter within owldatabase testfilterdb
 partition (part1 = 2, part2 = "bbb", part3 = 4)
 schema "c1:int" delocation "testloc5";

select partition objects from owltable testfilter within owldatabase testfilterdb;
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( part1 = 1 );
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( part1 = 1 and part2="aaa"  );
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 = 1) and (part2="aaa"));

select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (part1 = 1 or part1 = 2) and part2="aaa" );

--test for precedence of AND over OR
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = 1 and part2="aaa" or part1=2 and part2 = "bbb");
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (part1 = 1 and part2="aaa") or (part1=2 and part2 = "bbb"));

--Nested expressions
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (part1 = 1 and (part2="bbb" or part3 = 3)) or (part1=2 and (part2 = "bbb" or part3 = 5)));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (part1 = 1 and (part2="bbb" or part3 = 4)) or (part1=2 and (part2 = "bbb" or part3 = 4)));


--Operator tests
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 = 1) and (part2 > "aaa"));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 >= 1) and (part2 = "aaa"));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 <= 1) and (part2 < "bbb"));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 > 1) and (part2 <= "bbb"));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 < 2) and (part2 >= "aaa"));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 IN (1)) and (part2 like "a%" ));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((part1 IN (1, 2)) and (part2 in ("aaa", "bbb")));

--Tests with partition level clause
select partition objects from owltable testfilter within owldatabase testfilterdb at partition level(part1);
select partition objects from owltable testfilter within owldatabase testfilterdb at partition level(part2);
select partition objects from owltable testfilter within owldatabase testfilterdb at partition level(part3);

select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = 1) at partition level(part1);
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = 1) at partition level(part2);
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = 1) at partition level(part3);

select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = 1 and part2="aaa" or part1=2 and part2 = "bbb") at partition level(part2);
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (part1 = 1 and part2="aaa") or (part1=2 and part2 = "bbb")) at partition level(part3);

--Reverse order
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((1 < part1 ) and ("bbb" >= part2));
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ( (1 = part1 and "aaa" = part2) or (2=part1 and part2 = "bbb"));

--Negative (invalid datatype) tests
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 = "1");
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part2 = 1);
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part2 in (1) );
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 in ("1", "2") );
select partition objects from owltable testfilter within owldatabase testfilterdb with partition (part1 like "%aaa%" );

--Negative (value on LHS for IN and LIKE)
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ((1) IN part1);
select partition objects from owltable testfilter within owldatabase testfilterdb with partition ("%aaa%" LIKE part2);

--cleanup
drop owltable testfilter within owldatabase testfilterdb;
drop owldatabase testfilterdb;

