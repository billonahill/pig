<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V2.0//EN" "http://forrest.apache.org/dtd/document-v20.dtd">

<document>
  <header>
    <title>Index</title>
  </header>
  <body>


  
<!-- ====================================================================== -->
<p id="top"> 
<a href="#sym-index">Symbols</a>
<a href="#a-index">A</a>
<a href="#b-index">B</a>
<a href="#c-index">C</a>
<a href="#d-index">D</a>
<a href="#e-index">E</a>
<a href="#f-index">F</a>
<a href="#g-index">G</a>
<a href="#h-index">H</a>
<a href="#i-index">I</a>
<a href="#j-index">J</a>
<a href="#k-index">K</a>
<a href="#l-index">L</a>
<a href="#m-index">M</a>
<a href="#n-index">N</a>
<a href="#o-index">O</a>
<a href="#p-index">P</a>
<a href="#q-index">Q</a>
<a href="#r-index">R</a>
<a href="#s-index">S</a>
<a href="#t-index">T</a>
<a href="#u-index">U</a>
<a href="#v-index">V</a>
<a href="#w-index">W</a>
<a href="#x-index">X</a>
<a href="#y-index">Y</a>
<a href="#z-index">Z</a>
</p>
<p></p>
<p></p>

<!-- ==== A ================================================================== -->
<p></p>
<p id="sym-index"><strong>Symbols</strong></p>

<p>+ <a href="basic.html#arithmetic">addition operator</a></p>
<p>?: <a href="basic.html#arithmetic">bincond operator</a></p>
<p>/* */ <a href="start.html#comments">multi-line comments</a></p>
<p>-- <a href="start.html#comments">single-line comments</a></p>
<p>#  <a href="basic.html#deref">deference operator (map)</a></p>
<p>.   <a href="basic.html#deref">deference operator (tuple, bag)</a></p>
<p>/  <a href="basic.html#arithmetic">division operator</a></p>
<p>==   <a href="basic.html#comparison">equal operator</a></p>
<p>&gt;   <a href="basic.html#comparison">greater than operator</a></p>
<p>&gt;=  <a href="basic.html#comparison">greater than or equal to operator</a></p>
<p>&lt;   <a href="basic.html#comparison">less than operator</a></p>
<p>&lt;=   <a href="basic.html#comparison">less than or equal to operator</a></p>
<p>..  <a href="basic.html#prexp">project-range expression</a></p>
<p>% <a href="basic.html#arithmetic">modulo operator</a></p>
<p>* <a href="basic.html#arithmetic">multiplication operator</a></p>
<p>!=   <a href="basic.html#comparison">not equal operator</a></p>
<p>+  <a href="basic.html#sign">sign operator (positive)</a></p>
<p>-   <a href="basic.html#sign">sign operator (negative)</a></p>
<p>*   <a href="basic.html#sexp">star expression</a></p>
<p>- <a href="basic.html#arithmetic">subtraction operator</a></p>


<!-- ==== A ================================================================== -->
<p></p>
<p id="a-index"><strong>A</strong> (<a href="#top">top</a>)</p>


<p><a href="func.html#abs">ABS</a></p>

<p><a href="udf.html#accumulator-interface">accumulator interface</a></p>

<p><a href="func.html#acos">ACOS</a></p>

<p><a href="udf.html#aggregate-functions">aggregate functions</a></p>

<p><a href="udf.html#algebraic-interface">algebraic interface</a></p>

<p>aliases (for fields, relations). <em>See</em> referencing.</p>

<p><a href="start.html#dfs">Amazon S3</a></p>
<p><a href="basic.html#boolops">AND</a> (Boolean)</p>
<p><a href="basic.html#arithmetic">arithmetic operators</a></p>

<p><a href="func.html#asin">ASIN</a></p>
<p><a href="func.html#atan">ATAN</a></p>
<p><a href="func.html#avg">AVG</a></p>

<!-- ==== B ================================================================== -->
<p></p>
<p id="b-index"><strong>B</strong> (<a href="#top">top</a>)</p>

<p><a href="perf.html#backward-compatibility">backward compatibility</a> (multi-query execution)</p>

<p>bags (data type)
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#relations">and relations</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#bag-schema">bag schema</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#schema-multi">schemas for multiple types</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#bag">syntax</a>
</p>

<p><a href="start.html#batch-mode">batch mode</a></p>

<p><a href="basic.html#arithmetic">bincond operator</a> ( ?: )</p>

<p><a href="func.html#binstorage">BinStorage</a></p>

<p>Booleans
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#bexp">expressions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#boolops">AND operator</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#boolops">OR operator</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#boolops">NOT operator</a>
</p>

<p><a href="cont.html#boundscript-object">BoundScript.java object</a></p>

<p><a href="start.html#build">building Pig</a></p>


<!-- ==== C ================================================================== -->
<p></p>
<p id="c-index"><strong>C</strong> (<a href="#top">top</a>)</p>

<p><a href="basic.html#case-sensitivity">case sensitivity</a></p>

<p>casting types
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#cast">operators</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#cast-relations">relations to scalars</a>
<br></br>&nbsp;&nbsp;&nbsp; <em>See also</em> types tables
</p>

<p><a href="func.html#cbrt">CBRT</a></p>

<p><a href="func.html#ceil">CEIL</a></p>

<p><a href="udf.html#checkschema">checkSchema</a></p>

<p><a href="basic.html#cogroup">COGROUP</a></p>

<p><a href="perf.html#combiner">combiner</a></p>

<p><a href="basic.html#comparison">comparison operators</a></p>

<p><a href="start.html#comments">comments</a> (in Pig Scripts)</p>

<p><a href="func.html#handling-compression">compression</a> (of data)</p>

<p><a href="func.html#concat">CONCAT</a></p>
<p><a href="basic.html#constants">constants</a></p>
<p><a href="func.html#cosh">COS</a></p>
<p><a href="func.html#cosh">COSH</a></p>
<p><a href="func.html#count">COUNT</a></p>
<p><a href="func.html#count-star">COUNT_STAR</a></p>

<p><a href="basic.html#cross">CROSS</a></p>

<!-- ==== D ================================================================== -->
<p></p>
<p id="d-index"><strong>D</strong> (<a href="#top">top</a>)</p>

<p>data
<br></br>&nbsp;&nbsp;&nbsp; <a href="func.html#handling-compression">compression</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#data-load">loading</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="func.html#load-store-functions">load/store functions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#data-store">storing intermediate results</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#data-results">storing final results</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#data-work-with">working with</a>
</p>

<p>data types
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#data-types">in Pig Latin</a>
</p>

<p>debugging
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#diagnostic-ops">diagnostic operators</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#penny">Penny </a> 
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#debug">and Pig Latin</a>
</p>

<p>decorators. <em>See</em> Python</p>

<p>deference operators
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#deref">tuple or bag</a> ( . )
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#deref">map</a> ( #  )
</p>

<p><a href="cont.html#define-macros">DEFINE (macros)</a> </p>
<p><a href="basic.html#define-udfs">DEFINE (UDFs, streaming)</a> </p>

<p><a href="test.html#describe">DESCRIBE</a></p>

<p><a href="start.html#dfs">distributed file systems</a> (and Pig Scripts)</p>

<p><a href="basic.html#distinct">DISTINCT</a></p>

<p><a href="udf.html#distributed-cache">distributed cache</a></p>
<p><a href="start.html#download">downloading Pig</a></p>

<p><a href="func.html#diff">DIFF</a></p>

<p><a href="test.html#dump">DUMP</a> <em>See also </em> Store vs. Dump</p>

<p><a href="func.html#dynamic-invokers">dynamic invokers</a></p>

<!-- ==== E ================================================================== -->
<p></p>
<p id="e-index"><strong>E</strong> (<a href="#top">top</a>)</p>

<p>embedded Pig
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#invocation-basics">invocation basics</a> 
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#invocation-details">invocation details</a> (compile, bind, run)
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#embed-java">and Java</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#embed-python">and JavaScript</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#pig-run-api">and PigRunner API</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#pigserver">and PigServer Interface</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#embed-python">and Python</a>
</p>

<p><a href="cont.html#pigstats">EmbeddedPigStats</a></p>

<p><a href="perf.html#error-handling">error handling</a> (multi-query execution)</p>

<p><a href="func.html#eval-functions">eval functions</a> (built in)</p>

<p><a href="udf.html#eval-functions">eval functions</a> (UDFs)
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#aggregate-functions">aggregate functions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#distributed-cache">and distributed cache</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#error-handling">and error handling</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#function-overloading">and function overloading</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#filter-functions">filter functions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#import-lists">and import lists</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#pig-types">and Pig types</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#reporting-progress">reporting progress of</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#schemas">and schemas</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#eval-functions-use">using, how to</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#eval-functions-write">writing, how to</a>
</p>

<p><a href="cmds.html#exec">exec</a></p>

<p>exectution modes
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#execution-modes">local mode</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#execution-modes">mapreduce mode</a>
</p>

<p><a href="func.html#exp">EXP</a></p>

<p><a href="test.html#explain">EXPLAIN</a></p>

<p>expressions
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#expressions">and Pig Latin</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#bexp">Boolean expressions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#fexp">field expressions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#gexp">general expressions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#prexp">project-range expressions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#sexp">star  expressions</a> ( * )
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#texp">tuple expressions</a>
</p>

<!-- ==== F ================================================================== -->
<p></p>
<p id="f-index"><strong>F</strong> (<a href="#top">top</a>)</p>

<p><a href="basic.html#fexp">field expressions</a></p>

<p>fields
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#relations">definition of</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-field">referencing</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-field-complex">referencing and complex types</a>
</p>

<p><a href="basic.html#filter">FILTER</a></p>

<p> <a href="udf.html#filter-functions">filter functions</a></p>

<p><a href="basic.html#foreach">FOREACH</a></p>

<p><a href="basic.html#flatten">flatten operator</a></p>

<p><a href="func.html#floor">FLOOR</a></p>

<p><a href="cmds.html#fs">fs</a></p>

<!-- ==== G ================================================================== -->
<p></p>
<p id="g-index"><strong>G</strong> (<a href="#top">top</a>)</p>

<p><a href="basic.html#gexp">general expressions</a></p>

<p><a href="udf.html#loadfunc-abstract">getInputFormat</a></p>

<p><a href="func.html#pigstats">getAllErrorMessages</a></p>
<p><a href="cont.html#pigstats">getAllStats</a></p>

<p><a href="udf.html#loadfunc-abstract">getNext</a></p>
<p><a href="udf.html#storefunc-override">getOutputFormat</a></p>

<p><a href="basic.html#group">GROUP</a></p>
<p><a href="start.html#interactive-mode">grunt shell</a></p>

<!-- ==== H ================================================================== -->
<p></p>
<p id="h-index"><strong>H</strong> (<a href="#top">top</a>)</p>

<p>Hadoop
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#hadoop-job-history-loader">HadoopJobHistoryLoader</a>
<br></br>&nbsp;&nbsp;&nbsp; hadoop partitioner. <em>See </em> PARTITION BY
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#properties">properties</a>

</p>

<p><a href="start.html#dfs">HDFS</a></p>
<p><a href="cmds.html#help">help</a> (command)</p>

<p></p>

<!-- ==== I ================================================================== -->
<p></p>
<p id="i-index"><strong>I</strong> (<a href="#top">top</a>)</p>

<p><a href="basic.html#identifiers">identifiers</a></p>

<p><a href="test.html#illustrate">ILLUSTRATE</a></p>

<p><a href="cont.html#import-macros">IMPORT (macros)</a></p>


<p><a href="perf.html#ImplicitSplitInserter">ImplicitSplitInserter </a></p>



<p><a href="func.html#indexof">INDEXOF</a></p>


<p><a href="cont.html#pigstats">isEmbedded</a></p>
<p><a href="func.html#isempty">IsEmpty</a></p>

<p>installing Pig
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#build">builds</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#download">downloads</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#req">software requirements</a>
</p> 

<p><a href="start.html#interactive-mode">interactive mode</a></p>

<!-- ==== J ================================================================== -->
<p></p>
<p id="j-index"><strong>J</strong> (<a href="#top">top</a>)</p>


<p> <a href="cont.html#java-objects">Java objects</a></p>

<p> <a href="udf.html#js-udfs">Javascript UDFs</a></p>

<p><a href="basic.html#join-inner">JOIN (inner)</a> </p>
<p><a href="basic.html#join-outer">JOIN (outer)</a></p>


<!-- ==== K ================================================================== -->
<p></p>
<p id="k-index"><strong>K</strong> (<a href="#top">top</a>)</p>

<p>keywords. <em>See </em>reserved keywords</p>

<p><a href="cmds.html#kill">kill</a> (command)</p>

<!-- ==== L ================================================================== -->
<p></p>
<p id="l-index"><strong>L</strong> (<a href="#top">top</a>)</p>

<p><a href="func.html#last-index-of">LAST_INDEX_OF</a></p>
<p><a href="func.html#lcfirst">LCFIRST</a></p>
<p><a href="basic.html#limit">LIMIT</a></p>
<p><a href="basic.html#load">LOAD</a></p>

<p><a href="udf.html#load-store-functions">LoadCaster</a>. <em>See also</em> LoadFunc</p>

<p><a href="udf.html#load-store-functions">LoadFunc</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-abstract">getInputFormat</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-abstract">getNext</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">LoadCaster</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">LoadMetadata</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">LoadPushDown</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-abstract">prepareToRead</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">pushProjection</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-default">relativeToAbsolutePath</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-abstract">setLocation</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#loadfunc-default">setUdfContextSignature</a>
</p>

<p><a href="udf.html#load-functions">Load Functions</a> (UDFs)</p>

<p><a href="udf.html#load-store-functions">LoadMetadata</a></p>
<p><a href="udf.html#load-store-functions">LoadPushDown</a></p>

<p>load/store functions
<br></br>&nbsp;&nbsp;&nbsp; <a href="func.html#load-store-functions">built in functions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">UDFs</a>
</p>

<p><a href="start.html#execution-modes">local mode</a></p>
<p><a href="func.html#log">LOG</a></p>
<p><a href="func.html#log10">LOG10</a></p>


<p> <a href="perf.html#LogicalExpressionSimplifier">LogicalExpressionSimplifier </a></p>

<p><a href="func.html#lower">LOWER</a></p>

<!-- ==== M ================================================================== -->
<p></p>
<p id="m-index"><strong>M</strong> (<a href="#top">top</a>)</p>


<p>macros
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#define-macros">defining macros</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#expand-macros">expanding macros</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cont.html#import-macros">importing macros</a>
</p>

<p><a href="basic.html#mapreduce">MAPREDUCE</a> (operator)</p>

<p>MapReduce
<br></br>&nbsp;&nbsp;&nbsp;<a href="test.html#mapreduce-job-ids">MapReduce job ids and Pig scripts</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#Parallel">setting the number of reduce tasks</a>
</p>

<p><a href="start.html#execution-modes">mapreduce mode</a></p>

<p>maps (data type)
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#map-schema">map schema</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#schema-multi">schemas for multiple types</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#map">syntax</a>
</p>

<p>matches. <em>See</em> pattern matching</p>

<p><a href="func.html#max">MAX</a></p>

<p><a href="perf.html#memory-management">memory management</a></p>

<p><a href="perf.html#merge-joins">merge joins</a></p>


<p><a href="perf.html#MergeForEach">MergeForEach</a></p>

<p><a href="func.html#min">MIN</a></p>

<p><a href="basic.html#arithmetic">modulo operator</a> ( % )</p>

<p><a href="perf.html#multi-query-execution">multi-query execution</a></p>

<!-- ==== N ================================================================== -->
<p></p>
<p id="n-index"><strong>N</strong> (<a href="#top">top</a>)</p>

<p>names (for fields, relations). <em>See</em> referencing.</p>

<p><a href="basic.html#boolops">NOT</a> (Boolean)</p>

<p>nulls
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#nulls">and  Pig Latin</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#nulls-ops-produce">operations that produce</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#null_operators">null operators</a>
</p>


<!-- ==== O ================================================================== -->
<p></p>
<p id="o-index"><strong>O</strong> (<a href="#top">top</a>)</p>


<p> <a href="perf.html#OpLimitOptimizer">OpLimitOptimizer</a></p>


<p><a href="perf.html#optimization-rules">optimization rules</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#ImplicitSplitInserter">ImplicitSplitInserter </a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#LogicalExpressionSimplifier">LogicalExpressionSimplifier </a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#MergeForEach">MergeForEach</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#OpLimitOptimizer">OpLimitOptimizer</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#PushDownExplodes">PushDownExplodes</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#PushUpFilters">PushUpFilters </a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#StreamOptimizer">StreamOptimizer</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#TypeCastInserter">TypeCastInserter</a>
</p>


<p><a href="basic.html#boolops">OR</a> (Boolean)</p>
<p><a href="basic.html#order-by">ORDER BY</a></p>

<p><a href="udf.html#outputfunctionschema">outputFunctionSchema</a></p>
<p><a href="udf.html#outputschema">outputSchema</a></p>

<!-- ==== P ================================================================== -->
<p></p>
<p id="p-index"><strong>P</strong> (<a href="#top">top</a>)</p>


<p>PARALLEL
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#Use+the+Parallel+Features">and performance</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cmds.html#set">setting defalt_parallel</a>
</p>

<p><a href="cont.html#parameter-sub">parameter substitution</a></p>

<p>PARTITION BY
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#partition-by-cross">and CROSS</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#partition-by-distinct">and DISTINCT</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#partitionby">and GROUP</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#partition-by-join-inner">and JOIN (inner)</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#partition-by-join-inner">and JOIN (outer)</a>
</p>

<p><a href="basic.html#comparison">pattern matching</a></p>

<p>Performance
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#specialized-joins-performance">and merge joins</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#optimiztion-rules">optimization rules for</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#performance-enhancers">performance enhancers</a>
</p>

<p><a href="test.html#penny">Penny</a> (monitoring and debugging)</p>

<p><a href="test.html#pig-alias">pig.alias</a></p>

<p><a href="test.html#pig-command-line">pig.command.line</a></p>

<p><a href="func.html#pigdump">PigDUMP</a></p>

<p><a href="test.html#pig-hadoop-version">pig.hadoop.version</a></p>

<p><a href="udf.html#piggybank">Piggy Bank</a></p>

<p><a href="test.html#pig-job-feature">pig.job.feature</a></p>

<p>Pig Latin
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#comments">comments</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#pig-scripts">scripts</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#pl-statements">statements</a>
</p>

<p>Pig macros. <em>See</em> macros</p>

<p><a href="cont.html#pig-object">pig.java object</a></p>

<p><a href="test.html#pig-input-dirs">pig.input.dirs</a></p>

<p><a href="test.html#pig-map-output-dirs">pig.map.output.dirs</a></p>

<p><a href="test.html#pig-parent-jobid">pig.parent.jobid</a></p>

<p><a href="cont.html#pigstats">PigProgressNotificationListener interface</a></p>
<p><a href="cont.html#PigProgressNotificationListener">PigProgressNotificationListener.java</a></p>

<p><a href="test.html#pig-reduce-output-dirs">pig.reduce.output.dirs</a></p>

<p><a href="cont.html#pig-run-api">PigRunner API</a></p>

<p><a href="cont.html#pigserver">PigServer Interface</a></p>

<p><a href="test.html#pig-script">pig.script</a></p>

<p><a href="test.html#pig-script-features">pig.script.features</a></p>

<p><a href="test.html#pig-script-id">pig.script.id</a></p>

<p>Pig Scripts
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#batch-mode">and batch mode</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#comments">and comments</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#dfs">and distributed file systems</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cmds.html#exec">and exec command</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#mapreduce-job-ids">and MapReduce job ids</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="cmds.html#run">and run command</a>
</p>

<p><a href="cont.html#pigstats">PigStats</a> (function)</p>

<p><a href="test.html#pig-statistics">Pig Statistics</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-alias">pig.alias</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-command-line">pig.command.line</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-hadoop-version">pig.hadoop.version</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-job-feature">pig.job.feature</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-input-dirs">pig.input.dirs</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-map-output-dirs">pig.map.output.dirs</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-parent-jobid">pig.parent.jobid</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-reduce-output-dirs">pig.reduce.output.dirs</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-script">pig.script</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-script-features">pig.script.features</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-script-id">pig.script.id</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="test.html#pig-version">pig.version</a>
</p>

<p><a href="func.html#binstorage">PigStats.java object</a></p>

<p><a href="func.html#pigstorage">PigStorage</a> (function)</p>

<p><a href="start.html#tutorial">Pig tutorial</a></p>

<p>Pig types. <em>See</em> data types</p>

<p><a href="test.html#pig-unit">PigUnit</a></p>

<p><a href="test.html#pig-version">pig.version</a></p>

<p><a href="basic.html#ref-field">positional notation</a></p>

<p><a href="udf.html#loadfunc-abstract">prepareToRead</a></p>
<p><a href="udf.html#storefunc-override">prepareToWrite</a></p>

<p><a href="basic.html#prexp">project-range expression</a></p>

<p>properties
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#properties">specifying Hadoop properties</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="start.html#properties">specifying Pig properties</a>
</p>

<p><a href="udf.html#load-store-functions">pushProjection</a></p>
<p><a href="udf.html#storefunc-override">putNext</a></p>
<p> <a href="udf.html#python-udfs">Python UDFs</a></p>

<p> <a href="perf.html#PushDownExplodes">PushDownExplodes</a></p>

<p><a href="perf.html#PushUpFilters">PushUpFilters </a></p>

<!-- ==== Q ================================================================== -->
<p></p>
<p id="q-index"><strong>Q</strong> (<a href="#top">top</a>)</p>

<p><a href="cmds.html#quit">quit</a> (command)</p>

<!-- ==== R ================================================================== -->
<p></p>
<p id="r-index"><strong>R</strong> (<a href="#top">top</a>)</p>

<p><a href="func.html#random">RANDOM</a></p>

<p>referencing
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-field">fields</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-field-complex">fields and complex types</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-relation">relations</a>
</p>

<p><a href="func.html#regex-extract">REGEX_EXTRACT</a></p>
<p><a href="func.html#regex-extract-all">REGEX_EXTRACT_ALL</a></p>
<p><a href="basic.html#register">REGISTER</a></p>
<p>regular expressions. <em>See</em> pattern matching</p>

<p>relations
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#relations">and Pig Latin</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#cast-relations">casting to scalars</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#ref-relation">referencing</a>
</p>

<p><a href="udf.html#loadfunc-default">relativeToAbsolutePath</a></p> 
<p><a href="udf.html#storefunc-default">relToAbsPathForStoreLocation</a></p>

<p><a href="func.html#replace">REPLACE</a></p>

<p><a href="perf.html#replicated-joins">replicated joins</a></p>


<p><a href="start.html#req">requirements</a> (for Pig)</p>

<p id="reserved-keywords"><a href="basic.html#reserved-keywords">reserved keywords</a></p>

<p><a href="func.html#round">ROUND</a></p>

<p><a href="cmds.html#run">run</a> (command)</p>



<!-- ==== S ================================================================== -->
<p></p>
<p id="s-index"><strong>S</strong> (<a href="#top">top</a>)</p>

<p><a href="basic.html#sample">SAMPLE</a></p>

<p><a href="udf.html#schemafunction">schemaFunction</a></p>

<p>schemas
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#schema-complex">for complex data types</a> (tuples, bags, maps)
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#decorators">and decorators</a> (Python UDFs)
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#schemas">and Pig Latin</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#schema-return-types">and return types</a> (JavaScript UDFs)
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#schema-simple">for simple data types</a> (int, long, float, double, chararray, bytearray)
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#unknown-schema">unknown (null) schemas</a> 
</p>



<p><a href="cmds.html#set">set</a></p>

<p><a href="udf.html#loadfunc-abstract">setLocation</a></p>
<p><a href="udf.html#storefunc-default">setStoreFuncUDFContextSignature</a></p>
<p><a href="udf.html#storefunc-override">setStoreLocation</a></p>
<p><a href="udf.html#loadfunc-default">setUdfContextSignature</a></p>

<p><a href="cmds.html#sh">sh</a></p>

<p><a href="cmds.html#shell-cmds">shell commands</a></p>

<p>sign operators
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#sign">positive</a> ( + )
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#sign">negative</a> ( - )
</p>

<p><a href="perf.html#skewed-joins">skewed joins</a></p>

<p><a href="func.html#pigstats">SimplePigStats</a></p>

<p><a href="func.html#sin">SIN</a></p>
<p><a href="func.html#sinh">SINH</a></p>
<p><a href="func.html#size">SIZE</a></p>

<p>software requirements. <em>See</em> requirements</p>

<p><a href="basic.html#split">SPLIT</a></p>

<p>specialized joins
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#merge-joins">merge joins</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#specialized-joins-performance">and performance</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#replicated-joins">replicated joins</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="perf.html#skewed-joins">skewed joins</a>
</p>




<p><a href="func.html#sqrt">SQRT</a></p>
<p><a href="basic.html#sexp">star expression</a> ( * )</p>
<p><a href="start.html#pl-statements">statements</a> (Pig Latin)</p>

<p><a href="basic.html#store">STORE</a> <em>See also </em> Store vs. Dump</p>


<p><a href="udf.html#storefunc">StoreFunc</a></p>

<p><a href="udf.html#store-functions">Store Functions</a> (UDFs)</p>

<p><a href="udf.html#storemetadata">StoreMetadata</a></p>

<p><a href="perf.html#store-dump">Store vs. Dump</a> </p>

<p><a href="basic.html#stream">STREAM</a></p>

<p> <a href="perf.html#StreamOptimizer">StreamOptimizer</a></p>



<p><a href="func.html#strsplit">STRSPLIT</a></p>

<p><a href="func.html#string-functions">string functions</a></p>
<p><a href="func.html#substring">SUBSTRING</a></p>
<p><a href="func.html#sum">SUM</a></p>

<!-- ==== T ================================================================== -->
<p></p>
<p id="t-index"><strong>T</strong> (<a href="#top">top</a>)</p>

<p><a href="func.html#tan">TAN</a></p>
<p><a href="func.html#tanh">TANH</a></p>
<p><a href="func.html#textloader">TextLoader</a></p>

<p><a href="func.html#tobag">TOBAG</a></p>

<p><a href="func.html#tokenize">TOKENIZE</a></p>

<p><a href="func.html#topx">TOP</a></p>

<p><a href="func.html#totuple">TOTUPLE</a></p>

<p><a href="func.html#trim">TRIM</a></p>

<p><a href="basic.html#texp">tuple expression</a></p>

<p>tuples
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#relations">and relations</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#tuple">syntax</a>
</p>

<p> <a href="perf.html#TypeCastInserter">TypeCastInserter</a></p>


<p>type conversions. <em>See</em> casting types, types tables</p>

<p>types tables
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-add">for addition, subtraction</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-mult">for multiplication, division</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-equal">for equal, not equal</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-matches">for matches</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-negative">for negative (negation)</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="basic.html#types-table-nulls">for nulls</a>
<br></br>&nbsp;&nbsp;&nbsp; <em>See also</em> casting types
</p>


<p><a href="start.html#tutorial">tutorial</a></p>

<!-- ==== U ================================================================== -->
<p></p>
<p id="u-index"><strong>U</strong> (<a href="#top">top</a>)</p>

<p><a href="func.html#ucfirst">UCFIRST</a></p>

<p>UDFs 
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#accumulator-interface">accumulator interface</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#algebraic-interface">algebraic interface</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#udf-configurations">configurations, passing to </a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#function-instantiation">function instantiation</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#udf-interfaces">UDF interfaces</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#load-store-functions">load/store functions</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#udf-monitoring">monitoring</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#piggybank">Piggy Bank</a>
<br></br>&nbsp;&nbsp;&nbsp; <a href="udf.html#udf-configurations">UDFContext class</a>
</p>

<p><a href="basic.html#union">UNION</a></p>
<p><a href="func.html#upper">UPPER</a></p>

<p>user defined functions. <em>See</em> UDFs</p>

<p><a href="cmds.html#utility-cmds">utility commands</a></p>

<!-- ==== V ================================================================== -->
<p></p>
<p id="v-index"><strong>V</strong> (<a href="#top">top</a>)</p>

<!-- ==== W ================================================================== -->
<p></p>
<p id="w-index"><strong>W</strong> (<a href="#top">top</a>)</p>

<!-- ==== X ================================================================== -->
<p></p>
<p id="x-index"><strong>X</strong> (<a href="#top">top</a>)</p>

<!-- ==== Y ================================================================== -->
<p></p>
<p id="y-index"><strong>Y</strong> (<a href="#top">top</a>)</p>  
   
<!-- ==== Z ================================================================== -->
<p></p>
<p id="z-index"><strong>Z</strong> (<a href="#top">top</a>)</p>   


  </body>
</document>
